name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Copy files to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "."
        target: "/home/ubuntu/app"

    - name: Execute deployment commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/app
          
          # Backup current migrations if they exist
          if [ -d "alembic/versions" ]; then
            echo "Backing up existing migrations..."
            mkdir -p migrations_backup
            cp -r alembic/versions/* migrations_backup/
          fi
          
          # Clean up old files
          echo "Cleaning up old files..."
          rm -rf alembic/versions/*
          
          # Set up environment
          echo "${{ secrets.ENV_FILE }}" > .env
          
          # Stop containers and remove volumes
          echo "Stopping containers..."
          docker-compose -f docker-compose.prod.yml down -v
          
          # Clean up Docker
          echo "Cleaning Docker system..."
          docker system prune -af
          
          # Create versions directory with proper permissions
          echo "Setting up migrations directory..."
          mkdir -p alembic/versions
          chmod 777 alembic/versions
          
          # Restore migrations if backup exists
          if [ -d "migrations_backup" ] && [ "$(ls -A migrations_backup)" ]; then
            echo "Restoring migrations from backup..."
            cp -r migrations_backup/* alembic/versions/
            rm -rf migrations_backup
          fi
          
          # Start containers
          echo "Starting containers..."
          docker-compose -f docker-compose.prod.yml up -d --build
          
          # Wait for services to be healthy
          echo "Waiting for services to be healthy..."
          sleep 30
          
          # Check container status
          docker ps
          docker-compose -f docker-compose.prod.yml logs alembic