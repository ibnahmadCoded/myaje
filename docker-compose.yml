services:
  backend:
    depends_on:
      alembic:
        condition: service_healthy
    build: ./backend
    container_name: myaje-backend
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
    volumes:
      - ./backend:/app
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    env_file:
      - .env
    networks:
      - myaje_network

  frontend:
    build: ./frontend
    container_name: myaje-frontend
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
    volumes:
      - ./frontend:/app
    command: npm run dev
    env_file:
      - .env
    networks:
      - myaje_network
  
  postgres:
    image: postgres:17  
    container_name: myaje-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    networks:
      - myaje_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: myaje-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - myaje_network

  alembic:
    build:
      context: .
    volumes:
      - ./alembic/versions:/app/alembic/versions
      - ./backend:/app/backend #sync backend files
      - ./alembic.ini:/app/alembic.ini
    depends_on:
      - postgres
    container_name: myaje-alembic
    command: ["./entrypoint.sh"]
    env_file:
      - .env
    networks:
      - myaje_network
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/check_migrations.sh"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: myaje-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend
    networks:
      - myaje_network
  
volumes:
  postgres_data:  
    driver: local
  pgadmin_data:
    driver: local

networks:
  myaje_network:
    driver: bridge
